const SystemProgrammingandCompilerConstructionSPCC2 = [
  {
    question: "What is a key disadvantage of using a purely stack-based virtual machine?",
    options: ["High memory overhead", "Limited expressiveness", "Complex garbage collection", "Slower execution speed"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "In a system with a demand-paged virtual memory, what is the benefit of a Least Recently Used (LRU) page replacement algorithm?",
    options: ["Reduces page faults", "Improves I/O performance", "Ensures fairness among processes", "Minimizes memory fragmentation"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "Which aspect of a compiler does 'semantic analysis' focus on?",
    options: ["Syntax checking", "Type checking", "Code generation", "Optimization"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "What is the primary function of a System Call Handler?",
    options: ["Process scheduling", "Memory allocation", "Handling user-level interrupts", "Transition between user and kernel modes"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "Which assembly language instruction is likely to cause a segmentation fault if used inappropriately?",
    options: ["ADD", "MOV", "JMP", "PUSH"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "Which approach significantly reduces the risk of buffer overflows in C code?",
    options: ["Using `strncpy` instead of `strcpy`", "Employing static analysis tools", "Implementing robust input validation", "All of the above"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "In a compiler's intermediate code representation, what does a three-address code (3AC) aim to achieve?",
    options: ["Reduce complexity", "Improve readability", "Increase performance", "Promote code optimization"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "Which process involves transforming a high-level language program into an equivalent program in assembly language?",
    options: ["Parsing", "Lexical Analysis", "Semantic Analysis", "Code Generation"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "What is a key difference between a static and dynamic linker?",
    options: ["Dynamic linking is performed at compile time", "Static linking only handles external references", "Dynamic linking resolves references at runtime", "Static linking generates smaller executables"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "Which technique is crucial in managing virtual memory space in operating systems?",
    options: ["Paging", "Segmentation", "Swapping", "All of the above"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "Which data structure is essential in recursive descent parsing?",
    options: ["Queue", "Stack", "Tree", "Graph"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "What is the core concept in the design of a compiler that utilizes a bottom-up parsing technique?",
    options: ["Recursive Descent", "Shift-Reduce", "Top-Down", "Left Factoring"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "A crucial step in compiler optimization is the elimination of redundant instructions, which falls under what category?",
    options: ["Dead Code Elimination", "Constant Propagation", "Common Subexpression Elimination", "Strength Reduction"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "Which system call is responsible for allocating a block of memory to a process?",
    options: ["`open`", "`read`", "`mmap`", "`write`"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "What is a major concern in the design of a secure operating system kernel?",
    options: ["Avoiding memory leaks", "Enhancing performance", "Ensuring minimal context switches", "Implementing robust access control"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "Which error handling mechanism is critical for robust program execution in system programming?",
    options: ["Exception handling", "Garbage collection", "Macro expansion", "Data validation"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "How do interpreters generally handle high-level language code?",
    options: ["Compile to machine code then execute", "Interpret directly without prior compilation", "Compile to an intermediate code then interpret", "Convert directly into assembly language"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "Which compilation technique is commonly used for optimizing loop structures?",
    options: ["Constant Folding", "Inlining", "Loop Unrolling", "Strength Reduction"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "What is the primary goal of a linker?",
    options: ["To translate source code into machine code", "To optimize the machine code generated by a compiler", "To combine multiple object files into an executable", "To perform garbage collection in memory management"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "Which aspect is critical in managing process execution states?",
    options: ["Virtual memory allocation", "Synchronization primitives", "File system operations", "Network communication"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "Which optimization technique in a compiler is most effective at reducing the number of memory accesses for frequently used variables in a loop, and why?",
    options: ["Register allocation", "Constant folding", "Dead code elimination", "Common subexpression elimination"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "In a virtual memory system, what does a page fault interrupt signal to the operating system?",
    options: ["A memory address is invalid", "A page is not present in physical memory", "A process is exceeding its allocated memory", "A memory access violation occurred"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "Which intermediate representation (IR) is best suited for optimizations that target code size reduction in a compiler?",
    options: ["Three-address code", "Abstract syntax tree", "Quadruples", "Static single assignment form"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "What is the primary role of a linker in a system that uses dynamic linking?",
    options: ["To resolve external symbols at compile time", "To resolve external symbols at load time", "To resolve external symbols only during program execution", "To generate executable code"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "A system using demand-paging virtual memory experiences a high page fault rate. Which factor is most likely the primary cause?",
    options: ["Insufficient physical memory", "Inefficient disk I/O", "Large page size", "Poor page replacement algorithm"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "Which component of a compiler is responsible for translating high-level source code into a low-level assembly language representation?",
    options: ["Lexical analyzer", "Parser", "Semantic analyzer", "Intermediate code generator"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "What problem does the concept of 'a fork() system call followed by an exec() system call' primarily address?",
    options: ["Process creation and subsequent program loading", "Memory allocation in child processes", "File system management in child processes", "Inter-process communication"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "In a real-time operating system (RTOS), what scheduling algorithm best guarantees deadlines?",
    options: ["Round-robin", "Priority-based", "Shortest job first", "Multi-level feedback queue"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "When optimizing code for branch prediction, which of these is most relevant to improving performance?",
    options: ["Loop unrolling", "Constant propagation", "Code motion", "Branch prediction heuristics"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "A compiler encounters a pointer arithmetic expression. What stage(s) might need to handle this to generate correct code?",
    options: ["Type checking", "Intermediate code generation", "Code optimization", "All of these"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "What is the primary function of a memory manager in a modern operating system?",
    options: ["To allocate memory to processes", "To free memory when processes terminate", "To manage virtual memory", "All of these"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "Which compiler optimization technique involves moving code that is not dependent on the outcome of a conditional branch to before the branch itself?",
    options: ["Common subexpression elimination", "Dead code elimination", "Code hoisting", "Strength reduction"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "What does a memory leak in a system primarily indicate?",
    options: ["Insufficient physical memory", "Error in dynamic memory allocation", "Incorrect use of file handles", "Hardware malfunction"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "Which data structure is typically used by a compiler's parser to represent the grammatical structure of the source code?",
    options: ["Symbol table", "Abstract syntax tree", "Three-address code", "Quadruples"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "Which system call is crucial for establishing communication between processes in a multi-process environment?",
    options: ["fork", "exec", "open", "pipe"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "What is a critical section in concurrent programming?",
    options: ["A section of code that modifies shared resources", "A section of code that must execute atomically", "A section of code that can be parallelized", "All of the above"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "In a compiler, what is the purpose of the intermediate representation?",
    options: ["Directly execute the program", "To make the code more readable for programmers", "To isolate the front-end from the back-end", "To perform optimization on the code"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "What does the concept of a 'pipeline' represent in a processor?",
    options: ["A graphical representation of the data flow", "A sequence of stages for executing instructions", "A technique for optimizing the use of registers", "A design for storing intermediate results"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "Which technique in compiler design is used to handle ambiguous grammar rules?",
    options: ["Recursion", "Parsing", "Lexical Analysis", "Operator precedence parsing"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "What is the key challenge in designing operating systems for mobile devices?",
    options: ["Limited resources", "High performance demands", "Energy efficiency", "All of these"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "In the context of a compiler, what does the optimization phase primarily aim to do?",
    options: ["Convert the source code to assembly", "Transform code for improved efficiency", "Eliminate errors in the code", "Produce documentation for the code"],
    correct: 1,
    category: "SPCC"
  },
  {
    question: "In a distributed system, what is a major concern when coordinating actions across multiple machines?",
    options: ["Data consistency", "Synchronization", "Communication overhead", "All of these"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "Which concept is paramount for preventing data races in concurrent programming?",
    options: ["Abstraction", "Concurrency", "Atomicity", "Modularity"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "In a compiler, which phase is responsible for converting the intermediate representation into optimized machine code?",
    options: ["Lexical Analysis", "Syntax Analysis", "Semantic Analysis", "Code Optimization"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "Which memory management technique is most susceptible to external fragmentation?",
    options: ["Buddy System", "Paging", "Segmentation", "Heap Allocation"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "What is the primary function of a linker in a compilation process?",
    options: ["Resolving external references", "Generating intermediate code", "Performing lexical analysis", "Optimizing machine code"],
    correct: 0,
    category: "SPCC"
  },
  {
    question: "A system uses a demand-paged memory management scheme. What overhead is associated with a page fault?",
    options: ["Context switch overhead", "Disk I/O", "CPU overhead", "All of the above"],
    correct: 3,
    category: "SPCC"
  },
  {
    question: "Which addressing mode is used to access data stored at an offset from a base register?",
    options: ["Direct Addressing", "Indirect Addressing", "Base Addressing", "Immediate Addressing"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "In a compiler, what does a symbol table primarily store?",
    options: ["Keywords", "Tokens", "Variable declarations and their attributes", "Intermediate code"],
    correct: 2,
    category: "SPCC"
  },
  {
    question: "Which optimization technique is aimed at reducing the number of instructions by combining common sub-expressions?",
    options: ["Constant Folding", "Common Subexpression Elimination", "Dead Code Elimination", "Loop Unrolling"],
    correct: 1,
    category: "SPCC"
  }
];

export default SystemProgrammingandCompilerConstructionSPCC2;
